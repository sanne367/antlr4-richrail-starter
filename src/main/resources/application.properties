#
#
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML
#
## We expect database called "bep2-huland-casino",
## with the same username and password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://ec2-54-76-215-139.eu-west-1.compute.amazonaws.com:5432/dcksdkrp32icli?sslmode=require
spring.datasource.username=ohgldmgndyvlam
spring.datasource.password=d3b0757e6f4c40b9e2eef40f591a8549fc629356a9e08e0d84b51e2c465f11e7
#
## Let hibernate generate/update the tables
## based on the defined entities
## More complex applications often use
## a database migration tool (i.e. Flyweight)
## for maintainability
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.mapping-resources=persistence.xml
#spring.jpa.properties.hibernate.default_schema=public
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

